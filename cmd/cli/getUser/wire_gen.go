// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/rikodao/clean-architecture-golang-sample/pkg/adaptor/controller/userController"
	"github.com/rikodao/clean-architecture-golang-sample/pkg/adaptor/presentator/userPresentator"
	"github.com/rikodao/clean-architecture-golang-sample/pkg/adaptor/repository/userRepository"
	"github.com/rikodao/clean-architecture-golang-sample/pkg/application/usecase"
	"github.com/rikodao/clean-architecture-golang-sample/pkg/infrastracture/command/cobra"
	"github.com/rikodao/clean-architecture-golang-sample/pkg/infrastracture/command/interface"
)

// Injectors from wire.go:

func InitializeCommand() (_interface.Command, error) {
	userInMemoryRepository, err := userRepository.New()
	if err != nil {
		return nil, err
	}
	userJsonPresentator, err := userPresentator.New()
	if err != nil {
		return nil, err
	}
	getUserInteractor, err := usecase.New(userInMemoryRepository, userJsonPresentator)
	if err != nil {
		return nil, err
	}
	userJsonController, err := userController.New(getUserInteractor)
	if err != nil {
		return nil, err
	}
	command := cobra.NewCommand(userJsonController)
	return command, nil
}
